spring:
  application:
    name: logist
    server:
      port: 8080
  datasource:
    url: jdbc:postgresql://localhost:5438/internship/logist
    username: postgres
    password: 1234
    jpa:
      hibernate:
        ddl-auto: update
      properties:
        hibernate:
          dialect: org.hibernate.dialect.PostgreSQLDialect
    kafka:
      bootstrap-servers: localhost:9092
      consumer:
        group-id: logist-group
        auto-offset-reset: earliest
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      listener:
        missing-topics-fatal: false

  # Настройки Keycloak
  keycloak:
    auth-server-url: http://localhost:8080/auth
    realm: app-realm
    resource: logist-service
    public-client: true
    credentials:
      secret: your_secret
    use-resource-role-mappings: true

  # Настройки безопасности для доступа только пользователям с ролью LOGIST
  security:
    oauth2:
      client:
        provider:
          keycloak:
            issuer-uri: http://localhost:8080/auth/realms/app-realm
        registration:
          keycloak:
            client-id: app-client
            client-secret: dAt6mqso57GuwF0EQ1Mz0VD4rU1Y93M8
            authorization-grant-type: authorization_code
            redirect-uri: '{baseUrl}/login/oauth2/code/keycloak'
            scope: openid, profile, email

  logging:
    level:
      root: INFO
      org.springframework.kafka: DEBUG
